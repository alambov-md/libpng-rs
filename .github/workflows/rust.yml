name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-linux:

    runs-on: ubuntu-20.04

    steps:
    - name: Checkout with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Run tests
      run: cargo test

  test-windows:

    runs-on: windows-2019

    steps:
    - name: Checkout with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Run Cargo tests
      run: cargo test

  test-macos-and-ios:

    runs-on: macos-12

    steps:
    - name: Checkout with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Run tests
      run: cargo test
    - name: Clean cargo cache 
      run: cargo clean
    - name: Install iOS targets
      run: rustup target add aarch64-apple-ios aarch64-apple-ios-sim x86_64-apple-ios
    - name: Check buildability for iOS
      run: |
        cargo build --package mobile-test-helper --target aarch64-apple-ios
        cargo build --package mobile-test-helper --target aarch64-apple-ios-sim
        cargo build --package mobile-test-helper --target x86_64-apple-ios
    - name: Run end-to-end test
      working-directory: ./IosTests
      run: xcodebuild test -scheme IosTests -destination "platform=iOS Simulator,OS=16.2,name=iPhone 8"
  
  test-android:

    runs-on: ubuntu-20.04

    steps:
    - name: Checkout with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Check buildability for Android
      run: |
        cargo ndk -t armeabi-v7a -t arm64-v8a -t x86 -t x86_64 \
          -o AndroidTests/app/src/main/jniLibs \
          build -p mobile-test-helper
    - name: Run end-to-end test
      working-directory: ./AndroidTests
      run: ./gradlew connectedAndroidTest

