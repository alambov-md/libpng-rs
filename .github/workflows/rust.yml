name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-linux:

    runs-on: ubuntu-20.04

    steps:
    - name: Checkout with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Code lint checks
      run: cargo clippy
    - name: Run tests
      run: cargo test

  test-windows:

    runs-on: windows-2019

    steps:
    - name: Checkout with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Run Cargo tests
      run: cargo test

  test-macos-and-ios:

    runs-on: macos-12

    steps:
    - name: Checkout with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Run tests
      run: cargo test
    - name: Clean cargo cache 
      run: cargo clean
    - name: Install iOS targets
      run: rustup target add aarch64-apple-ios aarch64-apple-ios-sim x86_64-apple-ios
    - name: Check buildability for iOS
      run: |
        cargo build --package mobile-test-helper --target aarch64-apple-ios
        cargo build --package mobile-test-helper --target aarch64-apple-ios-sim
        cargo build --package mobile-test-helper --target x86_64-apple-ios
    - name: Run end-to-end test
      working-directory: ./IosTests
      run: xcodebuild test -scheme IosTests -destination "platform=iOS Simulator,OS=16.2,name=iPhone 8"
  
  test-android:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install Cargo NDK
      run: cargo install cargo-ndk
    - name: Add Android targets
      run: |
        rustup target add \
          aarch64-linux-android \
          armv7-linux-androideabi \
          x86_64-linux-android \
          i686-linux-android
    - name: Check buildability for Android
      run: |
        cargo ndk -t armeabi-v7a -t arm64-v8a -t x86 -t x86_64 \
          -o AndroidTests/app/src/main/jniLibs \
          build -p mobile-test-helper
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: "temurin"
    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
    # - name: Run connected tests x86_64
    #   uses: ReactiveCircus/android-emulator-runner@v2
    #   with:
    #     api-level: 27
    #     target: default
    #     arch: x86_64
    #     script: cd AndroidTests && ./gradlew connectedAndroidTest
    # - name: Run connected tests x86
    #   uses: ReactiveCircus/android-emulator-runner@v2
    #   with:
    #     api-level: 27
    #     target: default
    #     arch: x86
    #     script: cd AndroidTests && ./gradlew connectedAndroidTest
    - name: Run connected tests arm64-v8a
      uses: ReactiveCircus/android-emulator-runner@v2
      with:
        api-level: 27
        target: default
        arch: arm64-v8a
        emulator-options: -no-window -no-snapshot -grpc-use-jwt
        script: cd AndroidTests && ./gradlew connectedAndroidTest
